{"version":3,"sources":["logo.svg","components/ContactComponent.js","appConstant.js","components/TimelineComponent2.js","pages/MainView.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ContactComponent","Object","core_browser_esm","css","padding","listStyle","display","justifyContent","fontSize","lineHeight","margin","contact","map","item","defineProperty","color","href","link","index_es","icon","faLinkedin","faGithub","faFacebook","faEnvelope","timelineData","PureComponent","Name","place","time","Description","Tools","Img","mediaMaxWidth","width","concat","MainView","alignItems","height","marginTop","textAlign","background","border","App","className","_templateObject","Component","Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.81d3f150.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLinkedin, faGithub, faFacebook } from '@fortawesome/free-brands-svg-icons'\nimport { faEnvelope } from '@fortawesome/free-regular-svg-icons';\nimport { lightMasterColor, linkColor } from '../appConstant';\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nexport default () => {\n    return (<div css={{padding: '20px'}}>\n        <ul css={{\n            listStyle: 'none',\n            display: 'flex',\n            justifyContent: 'center',\n            fontSize: '1.5em',\n            lineHeight: 0,\n            padding: 0,\n            margin: 0\n        }}>\n            {contact.map(item => {\n                return (<li css={{ margin: '10px'}}>\n                    <a css={{\n                            color: linkColor,\n                            ['&:hover']: { color: 'white' }\n                        }} \n                        href={item.link}>\n                        <FontAwesomeIcon icon={item.icon}/>\n                    </a>\n                </li>)\n            })}\n        </ul>\n    </div>)\n}\n\nconst contact = [\n    { icon: faLinkedin, link: 'https://www.linkedin.com/in/aimetpgm/' },\n    { icon: faGithub, link: 'https://github.com/AimeTPGM' },\n    { icon: faFacebook, link: 'https://www.facebook.com/aimetpgm' },\n    { icon: faEnvelope, link: 'mailto:sr.pankamol@gmail.com?Subject=Hey!%20I%20found%20you%20from%20github%20page.'}\n]","export const masterColor = '#0c1f38';\nexport const lightMasterColor = '#1c538c';\nexport const linkColor = '#7ab0f3';\nexport const lightBlue = '#acd1ff';\n","import React, { PureComponent } from 'react';\nimport './TimelineStyle.css'\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport { lightBlue, masterColor } from '../appConstant';\n\n\nclass TimeLine extends PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = { activeItemIndex: timelineData.length-1 }\n        \n    }\n\n    render() {\n        const { activeItemIndex } = this.state;\n        const activeItem = timelineData[activeItemIndex];\n        return (<div>\n            <div css={{overflow: 'scroll', display: 'flex', justifyContent: 'center'}}>\n                {timelineData.map((item, i) => {\n                    let divStyle = { color: 'white', \n                        padding: '15px', \n                        borderRadius: '50%',  \n                        marginRight: '10px'\n                    };\n                    console.log(`i = ${i}, active=${activeItemIndex}`)\n                    if (i == activeItemIndex) {\n\n                        divStyle = { \n                            ...divStyle,\n                            background: lightBlue, \n                            color: masterColor\n                        }\n                    }\n                    return (<div>\n                        <div css={{...divStyle}}>{item.time}</div>\n                    </div>)\n                })}\n            </div>\n            <div>\n                {/* <div>\n                    {activeItem.Name}@{activeItem.place}\n                </div> */}\n                <div>\n                    {activeItem.Description}\n                </div>\n            </div>\n        </div>)\n    }\n    \n}\n\nexport default TimeLine;\n\nconst timelineData = [\n\t{\n\t\tName : \"Intern\",\n        place : \"Kookmin University, Seoul, South Korea\",\n        time: \"2014\",\n\t\t// \"Time\" : \"Sept 2014 - Dec 2014\",\n\t\t\"Description\" : \"Developed a website called Work Management Tool to manage project tasks from many country (Thailand and Korea are include) for development E-government system together, main responsibility on frontend development, sub-responsibility on backend development\",\n\t\t\"Tools\" : \"Bootstrap(HTML, CSS, JS) and CodeIgniter(PHP)\",\n\t\t\"Img\" : \"\"\n\t},\n\t{\n\t\tName : \"Software Developer (Freelance)\",\n        place : \"Bangkok, Thailand\",\n        time: \"2015\",\n\t\t// \"Time\" : \"Jun 2015 - Aug 2015\",\n\t\t\"Description\" : \"Developed a dynamic application that can run on website and mobile for sovling rubik cube in 2 mode: Solver and Tutor.\",\n\t\t\"Tools\" : \"IONIC(HTML, CSS, JS)\",\n\t\t\"Img\" : \"\"\n\t},\n\t{\n\t\tName : \"2D Game Graphic Designer (Freelance)\",\n        place : \"Bangkok, Thailand\",\n        time: \"2015\",\n\t\t// \"Time\" : \"Jun 2015 - Aug 2015\",\n\t\t\"Description\" : \"Designed and drew 2D game graphics for 3 programming education games: Angry Penguin, Save the Corgi and Tank Battle. All are included sprites, elements, background images and logo\",\n\t\t\"Tools\" : \"Photoshop\",\n\t\t\"Img\" : \"\"\n\t},\n\t{\n\t\tName : \"e-Government Laboratory Member and Senior\",\n        place : \"Kookmin University, Seoul, South Korea\",\n        time: \"2015\",\n\t\t// \"Time\" : \"Sept 2015 - Aug 2017\",\n\t\t\"Description\" : \"Research on Microservice Architecture and full-stack developed a document management system for managing document flow in e-Government based on a module of ONNARA (real Koream e-government system) referring to Microservice Architecture including system requirement gathering, design, development, testing and deployment. Also teaching others laboratory members and interns to participate in the project through pair programming.\",\n\t\t\"Tools\" : \"IONIC(HTML, CSS, JS), Java(Spring JAX-RS), Python(Flask), Docker and Openstack(Private Cloud)\",\n\t\t\"Img\" : \"\"\n\t},\n\t{\n\t\tName : \"Public Relation\",\n        place : \"Association of Thai Student in Korea (ATSK), Seoul, South Korea\",\n        time: \"2016\",\n\t\t// \"Time\" : \"Sept 2016 - Aug 2017\",\n\t\t\"Description\" : \"Designed invitation posters and publicised news and announcements of activities for Thai students in South Korea on social media\",\n\t\t\"Tools\" : \"Photoshop, Facebook and KakaoTalk\",\n\t\t\"Img\" : \"\"\n\t}\n\t]","import React from 'react';\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport ContactComponent from '../components/ContactComponent';\nimport { lightBlue } from '../appConstant';\nimport TimelineComponent from '../components/TimelineComponent';\nimport TimelineComponent2 from '../components/TimelineComponent2';\n\nconst mediaMaxWidth = (width) => { return `@media (max-width: ${width}px)` }\n\nexport default () => (\n    <div css={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh',\n        padding: '10px'\n    }}>\n        <div css={{ \n                marginTop: '-15vh',\n                [mediaMaxWidth(768)]: {\n                    marginTop: 0\n                }\n            }}>\n            <div css={{ fontSize: '3em', textAlign: 'left' }}>\n                <h1 css={{ \n                        color: lightBlue, fontSize: '1.2em', margin: '0 0 20px 0',\n                        [mediaMaxWidth(768)]: {\n                            fontSize: '1em'\n                        }\n                    }}>Aime – P.Srikaew</h1>\n            </div>\n            <div css={{ \n                padding: '40px', \n                background: 'rgba(0,0,0,0.5)', \n                border: '2px solid #6e9db7',\n                fontSize: '1.2em', \n                lineHeight: '2em',\n                width: '60vw',\n                margin: '10px 0 0',\n                textAlign: 'center',\n                [mediaMaxWidth(768)]: {\n                    width: 'fit-content',\n                    margin: 0,\n                }\n            }}>\n                <p><strong>Hello!</strong> I'm quite busy with so many things around. will keep update the page very very soon.</p>\n                <p>You can reach me anywhere online here.</p>\n                {/* <TimelineComponent /> */}\n                {/* <TimelineComponent2 /> */}\n            </div>\n            <ContactComponent />\n        </div>\n    </div>\n)\n\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport MainView from './pages/MainView';\nimport { lightMasterColor, masterColor } from './appConstant';\n\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\" css={css`background-image: linear-gradient(to bottom right, ${lightMasterColor}, ${masterColor}); color: white;`}>\n        <MainView />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}